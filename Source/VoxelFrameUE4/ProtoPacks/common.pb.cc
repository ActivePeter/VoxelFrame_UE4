// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProtoPacks/common.proto

#include "ProtoPacks/common.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

//begin custom modify
#if defined(_MSC_VER)
#pragma warning(disable:4125)
#endif // _MSC_VER
//end custom modify
class ClientFirstConfirmDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientFirstConfirm>
      _instance;
} _ClientFirstConfirm_default_instance_;
class EntityPosDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EntityPos>
      _instance;
} _EntityPos_default_instance_;
class PlayerBasicDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PlayerBasic>
      _instance;
} _PlayerBasic_default_instance_;
class ChunkPackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChunkPack>
      _instance;
} _ChunkPack_default_instance_;
class ChunkEntityPackDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ChunkEntityPack>
      _instance;
} _ChunkEntityPack_default_instance_;
class MainPlayerMoveCmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MainPlayerMoveCmd>
      _instance;
} _MainPlayerMoveCmd_default_instance_;
class MainPlayerJumpCmdDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MainPlayerJumpCmd>
      _instance;
} _MainPlayerJumpCmd_default_instance_;
class Cmd_SpawnEntityInPsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Cmd_SpawnEntityInPs>
      _instance;
} _Cmd_SpawnEntityInPs_default_instance_;
class Rpl_SpawnEntityInPsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rpl_SpawnEntityInPs>
      _instance;
} _Rpl_SpawnEntityInPs_default_instance_;
class EntityPosUpdateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<EntityPosUpdate>
      _instance;
} _EntityPosUpdate_default_instance_;
class PutBlockDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PutBlock>
      _instance;
} _PutBlock_default_instance_;
class Cmd_PutBlockInPsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Cmd_PutBlockInPs>
      _instance;
} _Cmd_PutBlockInPs_default_instance_;
class Rpl_PutBlockInPsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Rpl_PutBlockInPs>
      _instance;
} _Rpl_PutBlockInPs_default_instance_;
class ClientOperationFailedDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientOperationFailed>
      _instance;
} _ClientOperationFailed_default_instance_;
class ClientOperationSuccDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ClientOperationSucc>
      _instance;
} _ClientOperationSucc_default_instance_;
namespace protobuf_ProtoPacks_2fcommon_2eproto {
void InitDefaultsClientFirstConfirmImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ClientFirstConfirm_default_instance_;
    new (ptr) ::ClientFirstConfirm();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClientFirstConfirm::InitAsDefaultInstance();
}

void InitDefaultsClientFirstConfirm() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClientFirstConfirmImpl);
}

void InitDefaultsEntityPosImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_EntityPos_default_instance_;
    new (ptr) ::EntityPos();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::EntityPos::InitAsDefaultInstance();
}

void InitDefaultsEntityPos() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEntityPosImpl);
}

void InitDefaultsPlayerBasicImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PlayerBasic_default_instance_;
    new (ptr) ::PlayerBasic();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PlayerBasic::InitAsDefaultInstance();
}

void InitDefaultsPlayerBasic() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPlayerBasicImpl);
}

void InitDefaultsChunkPackImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ChunkPack_default_instance_;
    new (ptr) ::ChunkPack();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChunkPack::InitAsDefaultInstance();
}

void InitDefaultsChunkPack() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChunkPackImpl);
}

void InitDefaultsChunkEntityPackImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsEntityPos();
  {
    void* ptr = &::_ChunkEntityPack_default_instance_;
    new (ptr) ::ChunkEntityPack();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ChunkEntityPack::InitAsDefaultInstance();
}

void InitDefaultsChunkEntityPack() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsChunkEntityPackImpl);
}

void InitDefaultsMainPlayerMoveCmdImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_MainPlayerMoveCmd_default_instance_;
    new (ptr) ::MainPlayerMoveCmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MainPlayerMoveCmd::InitAsDefaultInstance();
}

void InitDefaultsMainPlayerMoveCmd() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMainPlayerMoveCmdImpl);
}

void InitDefaultsMainPlayerJumpCmdImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_MainPlayerJumpCmd_default_instance_;
    new (ptr) ::MainPlayerJumpCmd();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MainPlayerJumpCmd::InitAsDefaultInstance();
}

void InitDefaultsMainPlayerJumpCmd() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsMainPlayerJumpCmdImpl);
}

void InitDefaultsCmd_SpawnEntityInPsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsEntityPos();
  {
    void* ptr = &::_Cmd_SpawnEntityInPs_default_instance_;
    new (ptr) ::Cmd_SpawnEntityInPs();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Cmd_SpawnEntityInPs::InitAsDefaultInstance();
}

void InitDefaultsCmd_SpawnEntityInPs() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCmd_SpawnEntityInPsImpl);
}

void InitDefaultsRpl_SpawnEntityInPsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsEntityPos();
  {
    void* ptr = &::_Rpl_SpawnEntityInPs_default_instance_;
    new (ptr) ::Rpl_SpawnEntityInPs();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Rpl_SpawnEntityInPs::InitAsDefaultInstance();
}

void InitDefaultsRpl_SpawnEntityInPs() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRpl_SpawnEntityInPsImpl);
}

void InitDefaultsEntityPosUpdateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsEntityPos();
  {
    void* ptr = &::_EntityPosUpdate_default_instance_;
    new (ptr) ::EntityPosUpdate();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::EntityPosUpdate::InitAsDefaultInstance();
}

void InitDefaultsEntityPosUpdate() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsEntityPosUpdateImpl);
}

void InitDefaultsPutBlockImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_PutBlock_default_instance_;
    new (ptr) ::PutBlock();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PutBlock::InitAsDefaultInstance();
}

void InitDefaultsPutBlock() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsPutBlockImpl);
}

void InitDefaultsCmd_PutBlockInPsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsPutBlock();
  {
    void* ptr = &::_Cmd_PutBlockInPs_default_instance_;
    new (ptr) ::Cmd_PutBlockInPs();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Cmd_PutBlockInPs::InitAsDefaultInstance();
}

void InitDefaultsCmd_PutBlockInPs() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsCmd_PutBlockInPsImpl);
}

void InitDefaultsRpl_PutBlockInPsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Rpl_PutBlockInPs_default_instance_;
    new (ptr) ::Rpl_PutBlockInPs();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Rpl_PutBlockInPs::InitAsDefaultInstance();
}

void InitDefaultsRpl_PutBlockInPs() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsRpl_PutBlockInPsImpl);
}

void InitDefaultsClientOperationFailedImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ClientOperationFailed_default_instance_;
    new (ptr) ::ClientOperationFailed();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClientOperationFailed::InitAsDefaultInstance();
}

void InitDefaultsClientOperationFailed() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClientOperationFailedImpl);
}

void InitDefaultsClientOperationSuccImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_ClientOperationSucc_default_instance_;
    new (ptr) ::ClientOperationSucc();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ClientOperationSucc::InitAsDefaultInstance();
}

void InitDefaultsClientOperationSucc() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsClientOperationSuccImpl);
}

::google::protobuf::Metadata file_level_metadata[15];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClientFirstConfirm, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClientFirstConfirm, client_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EntityPos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EntityPos, t_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EntityPos, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EntityPos, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EntityPos, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EntityPos, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EntityPos, r_roll_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EntityPos, r_yaw_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EntityPos, r_pitch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EntityPos, vx_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EntityPos, vy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EntityPos, vz_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerBasic, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PlayerBasic, entity_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChunkPack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChunkPack, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChunkPack, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChunkPack, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChunkPack, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChunkEntityPack, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChunkEntityPack, entity_pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChunkEntityPack, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChunkEntityPack, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ChunkEntityPack, z_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MainPlayerMoveCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MainPlayerMoveCmd, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MainPlayerMoveCmd, move_forward_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MainPlayerMoveCmd, move_right_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MainPlayerMoveCmd, rotate_yaw_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MainPlayerJumpCmd, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MainPlayerJumpCmd, start_or_end_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::MainPlayerJumpCmd, entity_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Cmd_SpawnEntityInPs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Cmd_SpawnEntityInPs, task_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Cmd_SpawnEntityInPs, entity_pos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Rpl_SpawnEntityInPs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Rpl_SpawnEntityInPs, task_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Rpl_SpawnEntityInPs, entity_pos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EntityPosUpdate, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::EntityPosUpdate, entity_pos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PutBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PutBlock, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PutBlock, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PutBlock, z_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PutBlock, block_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::PutBlock, operation_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Cmd_PutBlockInPs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Cmd_PutBlockInPs, task_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Cmd_PutBlockInPs, put_block_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Rpl_PutBlockInPs, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Rpl_PutBlockInPs, task_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Rpl_PutBlockInPs, put_succ_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClientOperationFailed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClientOperationFailed, operation_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClientOperationSucc, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ClientOperationSucc, operation_id_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ClientFirstConfirm)},
  { 6, -1, sizeof(::EntityPos)},
  { 22, -1, sizeof(::PlayerBasic)},
  { 28, -1, sizeof(::ChunkPack)},
  { 37, -1, sizeof(::ChunkEntityPack)},
  { 46, -1, sizeof(::MainPlayerMoveCmd)},
  { 55, -1, sizeof(::MainPlayerJumpCmd)},
  { 62, -1, sizeof(::Cmd_SpawnEntityInPs)},
  { 69, -1, sizeof(::Rpl_SpawnEntityInPs)},
  { 76, -1, sizeof(::EntityPosUpdate)},
  { 82, -1, sizeof(::PutBlock)},
  { 92, -1, sizeof(::Cmd_PutBlockInPs)},
  { 99, -1, sizeof(::Rpl_PutBlockInPs)},
  { 106, -1, sizeof(::ClientOperationFailed)},
  { 112, -1, sizeof(::ClientOperationSucc)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ClientFirstConfirm_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_EntityPos_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PlayerBasic_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ChunkPack_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ChunkEntityPack_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MainPlayerMoveCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_MainPlayerJumpCmd_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Cmd_SpawnEntityInPs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Rpl_SpawnEntityInPs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_EntityPosUpdate_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_PutBlock_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Cmd_PutBlockInPs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Rpl_PutBlockInPs_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ClientOperationFailed_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_ClientOperationSucc_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "ProtoPacks/common.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 15);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\027ProtoPacks/common.proto\"6\n\022ClientFirst"
      "Confirm\022 \n\013client_type\030\001 \001(\0162\013.ClientTyp"
      "e\"\253\001\n\tEntityPos\022\026\n\001t\030\001 \001(\0162\013.EntityType\022"
      "\021\n\tentity_id\030\002 \001(\r\022\t\n\001x\030\003 \001(\002\022\t\n\001y\030\004 \001(\002"
      "\022\t\n\001z\030\005 \001(\002\022\016\n\006r_roll\030\006 \001(\002\022\r\n\005r_yaw\030\007 \001"
      "(\002\022\017\n\007r_pitch\030\010 \001(\002\022\n\n\002vx\030\t \001(\002\022\n\n\002vy\030\n "
      "\001(\002\022\n\n\002vz\030\013 \001(\002\" \n\013PlayerBasic\022\021\n\tentity"
      "_id\030\001 \001(\r\":\n\tChunkPack\022\014\n\004data\030\001 \001(\014\022\t\n\001"
      "x\030\002 \001(\005\022\t\n\001y\030\003 \001(\005\022\t\n\001z\030\004 \001(\005\"R\n\017ChunkEn"
      "tityPack\022\036\n\nentity_pos\030\001 \003(\0132\n.EntityPos"
      "\022\t\n\001x\030\002 \001(\005\022\t\n\001y\030\003 \001(\005\022\t\n\001z\030\004 \001(\005\"d\n\021Mai"
      "nPlayerMoveCmd\022\021\n\tentity_id\030\001 \001(\r\022\024\n\014mov"
      "e_forward\030\002 \001(\002\022\022\n\nmove_right\030\003 \001(\002\022\022\n\nr"
      "otate_yaw\030\004 \001(\002\"<\n\021MainPlayerJumpCmd\022\024\n\014"
      "start_or_end\030\001 \001(\r\022\021\n\tentity_id\030\002 \001(\r\"F\n"
      "\023Cmd_SpawnEntityInPs\022\017\n\007task_id\030\001 \001(\r\022\036\n"
      "\nentity_pos\030\002 \001(\0132\n.EntityPos\"F\n\023Rpl_Spa"
      "wnEntityInPs\022\017\n\007task_id\030\001 \001(\r\022\036\n\nentity_"
      "pos\030\002 \001(\0132\n.EntityPos\"1\n\017EntityPosUpdate"
      "\022\036\n\nentity_pos\030\001 \003(\0132\n.EntityPos\"S\n\010PutB"
      "lock\022\t\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\022\t\n\001z\030\003 \001(\005\022\020\n"
      "\010block_id\030\004 \001(\005\022\024\n\014operation_id\030\005 \001(\r\"A\n"
      "\020Cmd_PutBlockInPs\022\017\n\007task_id\030\001 \001(\r\022\034\n\tpu"
      "t_block\030\002 \001(\0132\t.PutBlock\"5\n\020Rpl_PutBlock"
      "InPs\022\017\n\007task_id\030\001 \001(\r\022\020\n\010put_succ\030\002 \001(\r\""
      "-\n\025ClientOperationFailed\022\024\n\014operation_id"
      "\030\001 \001(\r\"+\n\023ClientOperationSucc\022\024\n\014operati"
      "on_id\030\001 \001(\r*>\n\nClientType\022\031\n\025ClientType_"
      "GameServer\020\000\022\025\n\021ClientType_Player\020\001*&\n\nE"
      "ntityType\022\n\n\006T_Null\020\000\022\014\n\010T_Player\020\001b\006pro"
      "to3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1203);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ProtoPacks/common.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ProtoPacks_2fcommon_2eproto
const ::google::protobuf::EnumDescriptor* ClientType_descriptor() {
  protobuf_ProtoPacks_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ProtoPacks_2fcommon_2eproto::file_level_enum_descriptors[0];
}
bool ClientType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EntityType_descriptor() {
  protobuf_ProtoPacks_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ProtoPacks_2fcommon_2eproto::file_level_enum_descriptors[1];
}
bool EntityType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void ClientFirstConfirm::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientFirstConfirm::kClientTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientFirstConfirm::ClientFirstConfirm()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsClientFirstConfirm();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClientFirstConfirm)
}
ClientFirstConfirm::ClientFirstConfirm(const ClientFirstConfirm& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  client_type_ = from.client_type_;
  // @@protoc_insertion_point(copy_constructor:ClientFirstConfirm)
}

void ClientFirstConfirm::SharedCtor() {
  client_type_ = 0;
  _cached_size_ = 0;
}

ClientFirstConfirm::~ClientFirstConfirm() {
  // @@protoc_insertion_point(destructor:ClientFirstConfirm)
  SharedDtor();
}

void ClientFirstConfirm::SharedDtor() {
}

void ClientFirstConfirm::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientFirstConfirm::descriptor() {
  ::protobuf_ProtoPacks_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacks_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientFirstConfirm& ClientFirstConfirm::default_instance() {
  ::protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsClientFirstConfirm();
  return *internal_default_instance();
}

ClientFirstConfirm* ClientFirstConfirm::New(::google::protobuf::Arena* arena) const {
  ClientFirstConfirm* n = new ClientFirstConfirm;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientFirstConfirm::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientFirstConfirm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  client_type_ = 0;
  _internal_metadata_.Clear();
}

bool ClientFirstConfirm::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClientFirstConfirm)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ClientType client_type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_client_type(static_cast< ::ClientType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClientFirstConfirm)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClientFirstConfirm)
  return false;
#undef DO_
}

void ClientFirstConfirm::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClientFirstConfirm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ClientType client_type = 1;
  if (this->client_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->client_type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ClientFirstConfirm)
}

::google::protobuf::uint8* ClientFirstConfirm::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ClientFirstConfirm)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ClientType client_type = 1;
  if (this->client_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->client_type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientFirstConfirm)
  return target;
}

size_t ClientFirstConfirm::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientFirstConfirm)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ClientType client_type = 1;
  if (this->client_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->client_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientFirstConfirm::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientFirstConfirm)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientFirstConfirm* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientFirstConfirm>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientFirstConfirm)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientFirstConfirm)
    MergeFrom(*source);
  }
}

void ClientFirstConfirm::MergeFrom(const ClientFirstConfirm& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientFirstConfirm)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.client_type() != 0) {
    set_client_type(from.client_type());
  }
}

void ClientFirstConfirm::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientFirstConfirm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientFirstConfirm::CopyFrom(const ClientFirstConfirm& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientFirstConfirm)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientFirstConfirm::IsInitialized() const {
  return true;
}

void ClientFirstConfirm::Swap(ClientFirstConfirm* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientFirstConfirm::InternalSwap(ClientFirstConfirm* other) {
  using std::swap;
  swap(client_type_, other->client_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientFirstConfirm::GetMetadata() const {
  protobuf_ProtoPacks_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacks_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EntityPos::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityPos::kTFieldNumber;
const int EntityPos::kEntityIdFieldNumber;
const int EntityPos::kXFieldNumber;
const int EntityPos::kYFieldNumber;
const int EntityPos::kZFieldNumber;
const int EntityPos::kRRollFieldNumber;
const int EntityPos::kRYawFieldNumber;
const int EntityPos::kRPitchFieldNumber;
const int EntityPos::kVxFieldNumber;
const int EntityPos::kVyFieldNumber;
const int EntityPos::kVzFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityPos::EntityPos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsEntityPos();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:EntityPos)
}
EntityPos::EntityPos(const EntityPos& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&t_, &from.t_,
    static_cast<size_t>(reinterpret_cast<char*>(&vz_) -
    reinterpret_cast<char*>(&t_)) + sizeof(vz_));
  // @@protoc_insertion_point(copy_constructor:EntityPos)
}

void EntityPos::SharedCtor() {
  ::memset(&t_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vz_) -
      reinterpret_cast<char*>(&t_)) + sizeof(vz_));
  _cached_size_ = 0;
}

EntityPos::~EntityPos() {
  // @@protoc_insertion_point(destructor:EntityPos)
  SharedDtor();
}

void EntityPos::SharedDtor() {
}

void EntityPos::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntityPos::descriptor() {
  ::protobuf_ProtoPacks_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacks_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntityPos& EntityPos::default_instance() {
  ::protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsEntityPos();
  return *internal_default_instance();
}

EntityPos* EntityPos::New(::google::protobuf::Arena* arena) const {
  EntityPos* n = new EntityPos;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EntityPos::Clear() {
// @@protoc_insertion_point(message_clear_start:EntityPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&t_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vz_) -
      reinterpret_cast<char*>(&t_)) + sizeof(vz_));
  _internal_metadata_.Clear();
}

bool EntityPos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EntityPos)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .EntityType t = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_t(static_cast< ::EntityType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float x = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float y = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float z = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(45u /* 45 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float r_roll = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &r_roll_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float r_yaw = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u /* 61 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &r_yaw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float r_pitch = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u /* 69 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &r_pitch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float vx = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vx_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float vy = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u /* 85 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float vz = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &vz_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EntityPos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EntityPos)
  return false;
#undef DO_
}

void EntityPos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EntityPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .EntityType t = 1;
  if (this->t() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->t(), output);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->entity_id(), output);
  }

  // float x = 3;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->x(), output);
  }

  // float y = 4;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->y(), output);
  }

  // float z = 5;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(5, this->z(), output);
  }

  // float r_roll = 6;
  if (this->r_roll() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->r_roll(), output);
  }

  // float r_yaw = 7;
  if (this->r_yaw() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->r_yaw(), output);
  }

  // float r_pitch = 8;
  if (this->r_pitch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->r_pitch(), output);
  }

  // float vx = 9;
  if (this->vx() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->vx(), output);
  }

  // float vy = 10;
  if (this->vy() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->vy(), output);
  }

  // float vz = 11;
  if (this->vz() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(11, this->vz(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:EntityPos)
}

::google::protobuf::uint8* EntityPos::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:EntityPos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .EntityType t = 1;
  if (this->t() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->t(), target);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->entity_id(), target);
  }

  // float x = 3;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->x(), target);
  }

  // float y = 4;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->y(), target);
  }

  // float z = 5;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(5, this->z(), target);
  }

  // float r_roll = 6;
  if (this->r_roll() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->r_roll(), target);
  }

  // float r_yaw = 7;
  if (this->r_yaw() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->r_yaw(), target);
  }

  // float r_pitch = 8;
  if (this->r_pitch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->r_pitch(), target);
  }

  // float vx = 9;
  if (this->vx() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->vx(), target);
  }

  // float vy = 10;
  if (this->vy() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->vy(), target);
  }

  // float vz = 11;
  if (this->vz() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(11, this->vz(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EntityPos)
  return target;
}

size_t EntityPos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EntityPos)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .EntityType t = 1;
  if (this->t() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->t());
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // float x = 3;
  if (this->x() != 0) {
    total_size += 1 + 4;
  }

  // float y = 4;
  if (this->y() != 0) {
    total_size += 1 + 4;
  }

  // float z = 5;
  if (this->z() != 0) {
    total_size += 1 + 4;
  }

  // float r_roll = 6;
  if (this->r_roll() != 0) {
    total_size += 1 + 4;
  }

  // float r_yaw = 7;
  if (this->r_yaw() != 0) {
    total_size += 1 + 4;
  }

  // float r_pitch = 8;
  if (this->r_pitch() != 0) {
    total_size += 1 + 4;
  }

  // float vx = 9;
  if (this->vx() != 0) {
    total_size += 1 + 4;
  }

  // float vy = 10;
  if (this->vy() != 0) {
    total_size += 1 + 4;
  }

  // float vz = 11;
  if (this->vz() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntityPos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EntityPos)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityPos* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityPos>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EntityPos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EntityPos)
    MergeFrom(*source);
  }
}

void EntityPos::MergeFrom(const EntityPos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EntityPos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.t() != 0) {
    set_t(from.t());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.r_roll() != 0) {
    set_r_roll(from.r_roll());
  }
  if (from.r_yaw() != 0) {
    set_r_yaw(from.r_yaw());
  }
  if (from.r_pitch() != 0) {
    set_r_pitch(from.r_pitch());
  }
  if (from.vx() != 0) {
    set_vx(from.vx());
  }
  if (from.vy() != 0) {
    set_vy(from.vy());
  }
  if (from.vz() != 0) {
    set_vz(from.vz());
  }
}

void EntityPos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EntityPos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityPos::CopyFrom(const EntityPos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EntityPos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityPos::IsInitialized() const {
  return true;
}

void EntityPos::Swap(EntityPos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityPos::InternalSwap(EntityPos* other) {
  using std::swap;
  swap(t_, other->t_);
  swap(entity_id_, other->entity_id_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(r_roll_, other->r_roll_);
  swap(r_yaw_, other->r_yaw_);
  swap(r_pitch_, other->r_pitch_);
  swap(vx_, other->vx_);
  swap(vy_, other->vy_);
  swap(vz_, other->vz_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EntityPos::GetMetadata() const {
  protobuf_ProtoPacks_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacks_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PlayerBasic::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerBasic::kEntityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerBasic::PlayerBasic()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsPlayerBasic();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PlayerBasic)
}
PlayerBasic::PlayerBasic(const PlayerBasic& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  entity_id_ = from.entity_id_;
  // @@protoc_insertion_point(copy_constructor:PlayerBasic)
}

void PlayerBasic::SharedCtor() {
  entity_id_ = 0u;
  _cached_size_ = 0;
}

PlayerBasic::~PlayerBasic() {
  // @@protoc_insertion_point(destructor:PlayerBasic)
  SharedDtor();
}

void PlayerBasic::SharedDtor() {
}

void PlayerBasic::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerBasic::descriptor() {
  ::protobuf_ProtoPacks_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacks_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerBasic& PlayerBasic::default_instance() {
  ::protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsPlayerBasic();
  return *internal_default_instance();
}

PlayerBasic* PlayerBasic::New(::google::protobuf::Arena* arena) const {
  PlayerBasic* n = new PlayerBasic;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerBasic::Clear() {
// @@protoc_insertion_point(message_clear_start:PlayerBasic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entity_id_ = 0u;
  _internal_metadata_.Clear();
}

bool PlayerBasic::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PlayerBasic)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PlayerBasic)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PlayerBasic)
  return false;
#undef DO_
}

void PlayerBasic::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PlayerBasic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PlayerBasic)
}

::google::protobuf::uint8* PlayerBasic::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PlayerBasic)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PlayerBasic)
  return target;
}

size_t PlayerBasic::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PlayerBasic)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerBasic::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PlayerBasic)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerBasic* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerBasic>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PlayerBasic)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PlayerBasic)
    MergeFrom(*source);
  }
}

void PlayerBasic::MergeFrom(const PlayerBasic& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PlayerBasic)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
}

void PlayerBasic::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PlayerBasic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerBasic::CopyFrom(const PlayerBasic& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PlayerBasic)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerBasic::IsInitialized() const {
  return true;
}

void PlayerBasic::Swap(PlayerBasic* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerBasic::InternalSwap(PlayerBasic* other) {
  using std::swap;
  swap(entity_id_, other->entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerBasic::GetMetadata() const {
  protobuf_ProtoPacks_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacks_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChunkPack::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChunkPack::kDataFieldNumber;
const int ChunkPack::kXFieldNumber;
const int ChunkPack::kYFieldNumber;
const int ChunkPack::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChunkPack::ChunkPack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsChunkPack();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChunkPack)
}
ChunkPack::ChunkPack(const ChunkPack& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data().size() > 0) {
    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:ChunkPack)
}

void ChunkPack::SharedCtor() {
  data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _cached_size_ = 0;
}

ChunkPack::~ChunkPack() {
  // @@protoc_insertion_point(destructor:ChunkPack)
  SharedDtor();
}

void ChunkPack::SharedDtor() {
  data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ChunkPack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChunkPack::descriptor() {
  ::protobuf_ProtoPacks_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacks_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChunkPack& ChunkPack::default_instance() {
  ::protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsChunkPack();
  return *internal_default_instance();
}

ChunkPack* ChunkPack::New(::google::protobuf::Arena* arena) const {
  ChunkPack* n = new ChunkPack;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChunkPack::Clear() {
// @@protoc_insertion_point(message_clear_start:ChunkPack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool ChunkPack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChunkPack)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 z = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChunkPack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChunkPack)
  return false;
#undef DO_
}

void ChunkPack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChunkPack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data(), output);
  }

  // int32 x = 2;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->x(), output);
  }

  // int32 y = 3;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->y(), output);
  }

  // int32 z = 4;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChunkPack)
}

::google::protobuf::uint8* ChunkPack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChunkPack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data = 1;
  if (this->data().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  // int32 x = 2;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->x(), target);
  }

  // int32 y = 3;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->y(), target);
  }

  // int32 z = 4;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChunkPack)
  return target;
}

size_t ChunkPack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChunkPack)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data = 1;
  if (this->data().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data());
  }

  // int32 x = 2;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  // int32 y = 3;
  if (this->y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  // int32 z = 4;
  if (this->z() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->z());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChunkPack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChunkPack)
  GOOGLE_DCHECK_NE(&from, this);
  const ChunkPack* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChunkPack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChunkPack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChunkPack)
    MergeFrom(*source);
  }
}

void ChunkPack::MergeFrom(const ChunkPack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChunkPack)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data().size() > 0) {

    data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
  }
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void ChunkPack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChunkPack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChunkPack::CopyFrom(const ChunkPack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChunkPack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChunkPack::IsInitialized() const {
  return true;
}

void ChunkPack::Swap(ChunkPack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChunkPack::InternalSwap(ChunkPack* other) {
  using std::swap;
  data_.Swap(&other->data_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChunkPack::GetMetadata() const {
  protobuf_ProtoPacks_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacks_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ChunkEntityPack::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChunkEntityPack::kEntityPosFieldNumber;
const int ChunkEntityPack::kXFieldNumber;
const int ChunkEntityPack::kYFieldNumber;
const int ChunkEntityPack::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChunkEntityPack::ChunkEntityPack()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsChunkEntityPack();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ChunkEntityPack)
}
ChunkEntityPack::ChunkEntityPack(const ChunkEntityPack& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entity_pos_(from.entity_pos_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&z_) -
    reinterpret_cast<char*>(&x_)) + sizeof(z_));
  // @@protoc_insertion_point(copy_constructor:ChunkEntityPack)
}

void ChunkEntityPack::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _cached_size_ = 0;
}

ChunkEntityPack::~ChunkEntityPack() {
  // @@protoc_insertion_point(destructor:ChunkEntityPack)
  SharedDtor();
}

void ChunkEntityPack::SharedDtor() {
}

void ChunkEntityPack::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChunkEntityPack::descriptor() {
  ::protobuf_ProtoPacks_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacks_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ChunkEntityPack& ChunkEntityPack::default_instance() {
  ::protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsChunkEntityPack();
  return *internal_default_instance();
}

ChunkEntityPack* ChunkEntityPack::New(::google::protobuf::Arena* arena) const {
  ChunkEntityPack* n = new ChunkEntityPack;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChunkEntityPack::Clear() {
// @@protoc_insertion_point(message_clear_start:ChunkEntityPack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entity_pos_.Clear();
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&z_) -
      reinterpret_cast<char*>(&x_)) + sizeof(z_));
  _internal_metadata_.Clear();
}

bool ChunkEntityPack::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ChunkEntityPack)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .EntityPos entity_pos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_entity_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 x = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 y = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 z = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ChunkEntityPack)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ChunkEntityPack)
  return false;
#undef DO_
}

void ChunkEntityPack::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ChunkEntityPack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .EntityPos entity_pos = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entity_pos_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->entity_pos(static_cast<int>(i)), output);
  }

  // int32 x = 2;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->x(), output);
  }

  // int32 y = 3;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->y(), output);
  }

  // int32 z = 4;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->z(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ChunkEntityPack)
}

::google::protobuf::uint8* ChunkEntityPack::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ChunkEntityPack)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .EntityPos entity_pos = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entity_pos_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->entity_pos(static_cast<int>(i)), deterministic, target);
  }

  // int32 x = 2;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->x(), target);
  }

  // int32 y = 3;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->y(), target);
  }

  // int32 z = 4;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->z(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ChunkEntityPack)
  return target;
}

size_t ChunkEntityPack::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ChunkEntityPack)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .EntityPos entity_pos = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->entity_pos_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entity_pos(static_cast<int>(i)));
    }
  }

  // int32 x = 2;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  // int32 y = 3;
  if (this->y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  // int32 z = 4;
  if (this->z() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->z());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChunkEntityPack::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ChunkEntityPack)
  GOOGLE_DCHECK_NE(&from, this);
  const ChunkEntityPack* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ChunkEntityPack>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ChunkEntityPack)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ChunkEntityPack)
    MergeFrom(*source);
  }
}

void ChunkEntityPack::MergeFrom(const ChunkEntityPack& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ChunkEntityPack)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entity_pos_.MergeFrom(from.entity_pos_);
  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
}

void ChunkEntityPack::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ChunkEntityPack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChunkEntityPack::CopyFrom(const ChunkEntityPack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ChunkEntityPack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChunkEntityPack::IsInitialized() const {
  return true;
}

void ChunkEntityPack::Swap(ChunkEntityPack* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChunkEntityPack::InternalSwap(ChunkEntityPack* other) {
  using std::swap;
  entity_pos_.InternalSwap(&other->entity_pos_);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChunkEntityPack::GetMetadata() const {
  protobuf_ProtoPacks_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacks_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MainPlayerMoveCmd::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MainPlayerMoveCmd::kEntityIdFieldNumber;
const int MainPlayerMoveCmd::kMoveForwardFieldNumber;
const int MainPlayerMoveCmd::kMoveRightFieldNumber;
const int MainPlayerMoveCmd::kRotateYawFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MainPlayerMoveCmd::MainPlayerMoveCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsMainPlayerMoveCmd();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MainPlayerMoveCmd)
}
MainPlayerMoveCmd::MainPlayerMoveCmd(const MainPlayerMoveCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&entity_id_, &from.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&rotate_yaw_) -
    reinterpret_cast<char*>(&entity_id_)) + sizeof(rotate_yaw_));
  // @@protoc_insertion_point(copy_constructor:MainPlayerMoveCmd)
}

void MainPlayerMoveCmd::SharedCtor() {
  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rotate_yaw_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(rotate_yaw_));
  _cached_size_ = 0;
}

MainPlayerMoveCmd::~MainPlayerMoveCmd() {
  // @@protoc_insertion_point(destructor:MainPlayerMoveCmd)
  SharedDtor();
}

void MainPlayerMoveCmd::SharedDtor() {
}

void MainPlayerMoveCmd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MainPlayerMoveCmd::descriptor() {
  ::protobuf_ProtoPacks_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacks_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MainPlayerMoveCmd& MainPlayerMoveCmd::default_instance() {
  ::protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsMainPlayerMoveCmd();
  return *internal_default_instance();
}

MainPlayerMoveCmd* MainPlayerMoveCmd::New(::google::protobuf::Arena* arena) const {
  MainPlayerMoveCmd* n = new MainPlayerMoveCmd;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MainPlayerMoveCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:MainPlayerMoveCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rotate_yaw_) -
      reinterpret_cast<char*>(&entity_id_)) + sizeof(rotate_yaw_));
  _internal_metadata_.Clear();
}

bool MainPlayerMoveCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MainPlayerMoveCmd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 entity_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float move_forward = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &move_forward_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float move_right = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(29u /* 29 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &move_right_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float rotate_yaw = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(37u /* 37 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &rotate_yaw_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MainPlayerMoveCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MainPlayerMoveCmd)
  return false;
#undef DO_
}

void MainPlayerMoveCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MainPlayerMoveCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->entity_id(), output);
  }

  // float move_forward = 2;
  if (this->move_forward() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->move_forward(), output);
  }

  // float move_right = 3;
  if (this->move_right() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(3, this->move_right(), output);
  }

  // float rotate_yaw = 4;
  if (this->rotate_yaw() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(4, this->rotate_yaw(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MainPlayerMoveCmd)
}

::google::protobuf::uint8* MainPlayerMoveCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MainPlayerMoveCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->entity_id(), target);
  }

  // float move_forward = 2;
  if (this->move_forward() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->move_forward(), target);
  }

  // float move_right = 3;
  if (this->move_right() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(3, this->move_right(), target);
  }

  // float rotate_yaw = 4;
  if (this->rotate_yaw() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(4, this->rotate_yaw(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MainPlayerMoveCmd)
  return target;
}

size_t MainPlayerMoveCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MainPlayerMoveCmd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 entity_id = 1;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  // float move_forward = 2;
  if (this->move_forward() != 0) {
    total_size += 1 + 4;
  }

  // float move_right = 3;
  if (this->move_right() != 0) {
    total_size += 1 + 4;
  }

  // float rotate_yaw = 4;
  if (this->rotate_yaw() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MainPlayerMoveCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MainPlayerMoveCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const MainPlayerMoveCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MainPlayerMoveCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MainPlayerMoveCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MainPlayerMoveCmd)
    MergeFrom(*source);
  }
}

void MainPlayerMoveCmd::MergeFrom(const MainPlayerMoveCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MainPlayerMoveCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
  if (from.move_forward() != 0) {
    set_move_forward(from.move_forward());
  }
  if (from.move_right() != 0) {
    set_move_right(from.move_right());
  }
  if (from.rotate_yaw() != 0) {
    set_rotate_yaw(from.rotate_yaw());
  }
}

void MainPlayerMoveCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MainPlayerMoveCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MainPlayerMoveCmd::CopyFrom(const MainPlayerMoveCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MainPlayerMoveCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MainPlayerMoveCmd::IsInitialized() const {
  return true;
}

void MainPlayerMoveCmd::Swap(MainPlayerMoveCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MainPlayerMoveCmd::InternalSwap(MainPlayerMoveCmd* other) {
  using std::swap;
  swap(entity_id_, other->entity_id_);
  swap(move_forward_, other->move_forward_);
  swap(move_right_, other->move_right_);
  swap(rotate_yaw_, other->rotate_yaw_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MainPlayerMoveCmd::GetMetadata() const {
  protobuf_ProtoPacks_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacks_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MainPlayerJumpCmd::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MainPlayerJumpCmd::kStartOrEndFieldNumber;
const int MainPlayerJumpCmd::kEntityIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MainPlayerJumpCmd::MainPlayerJumpCmd()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsMainPlayerJumpCmd();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:MainPlayerJumpCmd)
}
MainPlayerJumpCmd::MainPlayerJumpCmd(const MainPlayerJumpCmd& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&start_or_end_, &from.start_or_end_,
    static_cast<size_t>(reinterpret_cast<char*>(&entity_id_) -
    reinterpret_cast<char*>(&start_or_end_)) + sizeof(entity_id_));
  // @@protoc_insertion_point(copy_constructor:MainPlayerJumpCmd)
}

void MainPlayerJumpCmd::SharedCtor() {
  ::memset(&start_or_end_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&start_or_end_)) + sizeof(entity_id_));
  _cached_size_ = 0;
}

MainPlayerJumpCmd::~MainPlayerJumpCmd() {
  // @@protoc_insertion_point(destructor:MainPlayerJumpCmd)
  SharedDtor();
}

void MainPlayerJumpCmd::SharedDtor() {
}

void MainPlayerJumpCmd::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MainPlayerJumpCmd::descriptor() {
  ::protobuf_ProtoPacks_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacks_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MainPlayerJumpCmd& MainPlayerJumpCmd::default_instance() {
  ::protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsMainPlayerJumpCmd();
  return *internal_default_instance();
}

MainPlayerJumpCmd* MainPlayerJumpCmd::New(::google::protobuf::Arena* arena) const {
  MainPlayerJumpCmd* n = new MainPlayerJumpCmd;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MainPlayerJumpCmd::Clear() {
// @@protoc_insertion_point(message_clear_start:MainPlayerJumpCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&start_or_end_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&entity_id_) -
      reinterpret_cast<char*>(&start_or_end_)) + sizeof(entity_id_));
  _internal_metadata_.Clear();
}

bool MainPlayerJumpCmd::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:MainPlayerJumpCmd)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 start_or_end = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_or_end_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 entity_id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &entity_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:MainPlayerJumpCmd)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:MainPlayerJumpCmd)
  return false;
#undef DO_
}

void MainPlayerJumpCmd::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:MainPlayerJumpCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 start_or_end = 1;
  if (this->start_or_end() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->start_or_end(), output);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->entity_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:MainPlayerJumpCmd)
}

::google::protobuf::uint8* MainPlayerJumpCmd::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:MainPlayerJumpCmd)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 start_or_end = 1;
  if (this->start_or_end() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->start_or_end(), target);
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->entity_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MainPlayerJumpCmd)
  return target;
}

size_t MainPlayerJumpCmd::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MainPlayerJumpCmd)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 start_or_end = 1;
  if (this->start_or_end() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->start_or_end());
  }

  // uint32 entity_id = 2;
  if (this->entity_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->entity_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MainPlayerJumpCmd::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MainPlayerJumpCmd)
  GOOGLE_DCHECK_NE(&from, this);
  const MainPlayerJumpCmd* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MainPlayerJumpCmd>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MainPlayerJumpCmd)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MainPlayerJumpCmd)
    MergeFrom(*source);
  }
}

void MainPlayerJumpCmd::MergeFrom(const MainPlayerJumpCmd& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MainPlayerJumpCmd)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.start_or_end() != 0) {
    set_start_or_end(from.start_or_end());
  }
  if (from.entity_id() != 0) {
    set_entity_id(from.entity_id());
  }
}

void MainPlayerJumpCmd::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MainPlayerJumpCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MainPlayerJumpCmd::CopyFrom(const MainPlayerJumpCmd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MainPlayerJumpCmd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MainPlayerJumpCmd::IsInitialized() const {
  return true;
}

void MainPlayerJumpCmd::Swap(MainPlayerJumpCmd* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MainPlayerJumpCmd::InternalSwap(MainPlayerJumpCmd* other) {
  using std::swap;
  swap(start_or_end_, other->start_or_end_);
  swap(entity_id_, other->entity_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MainPlayerJumpCmd::GetMetadata() const {
  protobuf_ProtoPacks_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacks_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Cmd_SpawnEntityInPs::InitAsDefaultInstance() {
  ::_Cmd_SpawnEntityInPs_default_instance_._instance.get_mutable()->entity_pos_ = const_cast< ::EntityPos*>(
      ::EntityPos::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Cmd_SpawnEntityInPs::kTaskIdFieldNumber;
const int Cmd_SpawnEntityInPs::kEntityPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Cmd_SpawnEntityInPs::Cmd_SpawnEntityInPs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsCmd_SpawnEntityInPs();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd_SpawnEntityInPs)
}
Cmd_SpawnEntityInPs::Cmd_SpawnEntityInPs(const Cmd_SpawnEntityInPs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_entity_pos()) {
    entity_pos_ = new ::EntityPos(*from.entity_pos_);
  } else {
    entity_pos_ = NULL;
  }
  task_id_ = from.task_id_;
  // @@protoc_insertion_point(copy_constructor:Cmd_SpawnEntityInPs)
}

void Cmd_SpawnEntityInPs::SharedCtor() {
  ::memset(&entity_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&task_id_) -
      reinterpret_cast<char*>(&entity_pos_)) + sizeof(task_id_));
  _cached_size_ = 0;
}

Cmd_SpawnEntityInPs::~Cmd_SpawnEntityInPs() {
  // @@protoc_insertion_point(destructor:Cmd_SpawnEntityInPs)
  SharedDtor();
}

void Cmd_SpawnEntityInPs::SharedDtor() {
  if (this != internal_default_instance()) delete entity_pos_;
}

void Cmd_SpawnEntityInPs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Cmd_SpawnEntityInPs::descriptor() {
  ::protobuf_ProtoPacks_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacks_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Cmd_SpawnEntityInPs& Cmd_SpawnEntityInPs::default_instance() {
  ::protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsCmd_SpawnEntityInPs();
  return *internal_default_instance();
}

Cmd_SpawnEntityInPs* Cmd_SpawnEntityInPs::New(::google::protobuf::Arena* arena) const {
  Cmd_SpawnEntityInPs* n = new Cmd_SpawnEntityInPs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Cmd_SpawnEntityInPs::Clear() {
// @@protoc_insertion_point(message_clear_start:Cmd_SpawnEntityInPs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && entity_pos_ != NULL) {
    delete entity_pos_;
  }
  entity_pos_ = NULL;
  task_id_ = 0u;
  _internal_metadata_.Clear();
}

bool Cmd_SpawnEntityInPs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd_SpawnEntityInPs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 task_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &task_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .EntityPos entity_pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_entity_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd_SpawnEntityInPs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd_SpawnEntityInPs)
  return false;
#undef DO_
}

void Cmd_SpawnEntityInPs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd_SpawnEntityInPs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 task_id = 1;
  if (this->task_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->task_id(), output);
  }

  // .EntityPos entity_pos = 2;
  if (this->has_entity_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->entity_pos_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd_SpawnEntityInPs)
}

::google::protobuf::uint8* Cmd_SpawnEntityInPs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Cmd_SpawnEntityInPs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 task_id = 1;
  if (this->task_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->task_id(), target);
  }

  // .EntityPos entity_pos = 2;
  if (this->has_entity_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->entity_pos_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd_SpawnEntityInPs)
  return target;
}

size_t Cmd_SpawnEntityInPs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Cmd_SpawnEntityInPs)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .EntityPos entity_pos = 2;
  if (this->has_entity_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->entity_pos_);
  }

  // uint32 task_id = 1;
  if (this->task_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->task_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Cmd_SpawnEntityInPs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Cmd_SpawnEntityInPs)
  GOOGLE_DCHECK_NE(&from, this);
  const Cmd_SpawnEntityInPs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Cmd_SpawnEntityInPs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Cmd_SpawnEntityInPs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Cmd_SpawnEntityInPs)
    MergeFrom(*source);
  }
}

void Cmd_SpawnEntityInPs::MergeFrom(const Cmd_SpawnEntityInPs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Cmd_SpawnEntityInPs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_entity_pos()) {
    mutable_entity_pos()->::EntityPos::MergeFrom(from.entity_pos());
  }
  if (from.task_id() != 0) {
    set_task_id(from.task_id());
  }
}

void Cmd_SpawnEntityInPs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Cmd_SpawnEntityInPs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cmd_SpawnEntityInPs::CopyFrom(const Cmd_SpawnEntityInPs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Cmd_SpawnEntityInPs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cmd_SpawnEntityInPs::IsInitialized() const {
  return true;
}

void Cmd_SpawnEntityInPs::Swap(Cmd_SpawnEntityInPs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Cmd_SpawnEntityInPs::InternalSwap(Cmd_SpawnEntityInPs* other) {
  using std::swap;
  swap(entity_pos_, other->entity_pos_);
  swap(task_id_, other->task_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Cmd_SpawnEntityInPs::GetMetadata() const {
  protobuf_ProtoPacks_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacks_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Rpl_SpawnEntityInPs::InitAsDefaultInstance() {
  ::_Rpl_SpawnEntityInPs_default_instance_._instance.get_mutable()->entity_pos_ = const_cast< ::EntityPos*>(
      ::EntityPos::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rpl_SpawnEntityInPs::kTaskIdFieldNumber;
const int Rpl_SpawnEntityInPs::kEntityPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rpl_SpawnEntityInPs::Rpl_SpawnEntityInPs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsRpl_SpawnEntityInPs();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Rpl_SpawnEntityInPs)
}
Rpl_SpawnEntityInPs::Rpl_SpawnEntityInPs(const Rpl_SpawnEntityInPs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_entity_pos()) {
    entity_pos_ = new ::EntityPos(*from.entity_pos_);
  } else {
    entity_pos_ = NULL;
  }
  task_id_ = from.task_id_;
  // @@protoc_insertion_point(copy_constructor:Rpl_SpawnEntityInPs)
}

void Rpl_SpawnEntityInPs::SharedCtor() {
  ::memset(&entity_pos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&task_id_) -
      reinterpret_cast<char*>(&entity_pos_)) + sizeof(task_id_));
  _cached_size_ = 0;
}

Rpl_SpawnEntityInPs::~Rpl_SpawnEntityInPs() {
  // @@protoc_insertion_point(destructor:Rpl_SpawnEntityInPs)
  SharedDtor();
}

void Rpl_SpawnEntityInPs::SharedDtor() {
  if (this != internal_default_instance()) delete entity_pos_;
}

void Rpl_SpawnEntityInPs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Rpl_SpawnEntityInPs::descriptor() {
  ::protobuf_ProtoPacks_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacks_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Rpl_SpawnEntityInPs& Rpl_SpawnEntityInPs::default_instance() {
  ::protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsRpl_SpawnEntityInPs();
  return *internal_default_instance();
}

Rpl_SpawnEntityInPs* Rpl_SpawnEntityInPs::New(::google::protobuf::Arena* arena) const {
  Rpl_SpawnEntityInPs* n = new Rpl_SpawnEntityInPs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Rpl_SpawnEntityInPs::Clear() {
// @@protoc_insertion_point(message_clear_start:Rpl_SpawnEntityInPs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && entity_pos_ != NULL) {
    delete entity_pos_;
  }
  entity_pos_ = NULL;
  task_id_ = 0u;
  _internal_metadata_.Clear();
}

bool Rpl_SpawnEntityInPs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Rpl_SpawnEntityInPs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 task_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &task_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .EntityPos entity_pos = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_entity_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Rpl_SpawnEntityInPs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Rpl_SpawnEntityInPs)
  return false;
#undef DO_
}

void Rpl_SpawnEntityInPs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Rpl_SpawnEntityInPs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 task_id = 1;
  if (this->task_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->task_id(), output);
  }

  // .EntityPos entity_pos = 2;
  if (this->has_entity_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->entity_pos_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Rpl_SpawnEntityInPs)
}

::google::protobuf::uint8* Rpl_SpawnEntityInPs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Rpl_SpawnEntityInPs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 task_id = 1;
  if (this->task_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->task_id(), target);
  }

  // .EntityPos entity_pos = 2;
  if (this->has_entity_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->entity_pos_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Rpl_SpawnEntityInPs)
  return target;
}

size_t Rpl_SpawnEntityInPs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Rpl_SpawnEntityInPs)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .EntityPos entity_pos = 2;
  if (this->has_entity_pos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->entity_pos_);
  }

  // uint32 task_id = 1;
  if (this->task_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->task_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Rpl_SpawnEntityInPs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Rpl_SpawnEntityInPs)
  GOOGLE_DCHECK_NE(&from, this);
  const Rpl_SpawnEntityInPs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Rpl_SpawnEntityInPs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Rpl_SpawnEntityInPs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Rpl_SpawnEntityInPs)
    MergeFrom(*source);
  }
}

void Rpl_SpawnEntityInPs::MergeFrom(const Rpl_SpawnEntityInPs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Rpl_SpawnEntityInPs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_entity_pos()) {
    mutable_entity_pos()->::EntityPos::MergeFrom(from.entity_pos());
  }
  if (from.task_id() != 0) {
    set_task_id(from.task_id());
  }
}

void Rpl_SpawnEntityInPs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Rpl_SpawnEntityInPs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rpl_SpawnEntityInPs::CopyFrom(const Rpl_SpawnEntityInPs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Rpl_SpawnEntityInPs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rpl_SpawnEntityInPs::IsInitialized() const {
  return true;
}

void Rpl_SpawnEntityInPs::Swap(Rpl_SpawnEntityInPs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rpl_SpawnEntityInPs::InternalSwap(Rpl_SpawnEntityInPs* other) {
  using std::swap;
  swap(entity_pos_, other->entity_pos_);
  swap(task_id_, other->task_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Rpl_SpawnEntityInPs::GetMetadata() const {
  protobuf_ProtoPacks_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacks_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void EntityPosUpdate::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EntityPosUpdate::kEntityPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EntityPosUpdate::EntityPosUpdate()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsEntityPosUpdate();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:EntityPosUpdate)
}
EntityPosUpdate::EntityPosUpdate(const EntityPosUpdate& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      entity_pos_(from.entity_pos_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:EntityPosUpdate)
}

void EntityPosUpdate::SharedCtor() {
  _cached_size_ = 0;
}

EntityPosUpdate::~EntityPosUpdate() {
  // @@protoc_insertion_point(destructor:EntityPosUpdate)
  SharedDtor();
}

void EntityPosUpdate::SharedDtor() {
}

void EntityPosUpdate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EntityPosUpdate::descriptor() {
  ::protobuf_ProtoPacks_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacks_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EntityPosUpdate& EntityPosUpdate::default_instance() {
  ::protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsEntityPosUpdate();
  return *internal_default_instance();
}

EntityPosUpdate* EntityPosUpdate::New(::google::protobuf::Arena* arena) const {
  EntityPosUpdate* n = new EntityPosUpdate;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EntityPosUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:EntityPosUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entity_pos_.Clear();
  _internal_metadata_.Clear();
}

bool EntityPosUpdate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EntityPosUpdate)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .EntityPos entity_pos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_entity_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EntityPosUpdate)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EntityPosUpdate)
  return false;
#undef DO_
}

void EntityPosUpdate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EntityPosUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .EntityPos entity_pos = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entity_pos_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->entity_pos(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:EntityPosUpdate)
}

::google::protobuf::uint8* EntityPosUpdate::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:EntityPosUpdate)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .EntityPos entity_pos = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->entity_pos_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->entity_pos(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EntityPosUpdate)
  return target;
}

size_t EntityPosUpdate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:EntityPosUpdate)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .EntityPos entity_pos = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->entity_pos_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->entity_pos(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EntityPosUpdate::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:EntityPosUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  const EntityPosUpdate* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EntityPosUpdate>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:EntityPosUpdate)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:EntityPosUpdate)
    MergeFrom(*source);
  }
}

void EntityPosUpdate::MergeFrom(const EntityPosUpdate& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:EntityPosUpdate)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entity_pos_.MergeFrom(from.entity_pos_);
}

void EntityPosUpdate::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:EntityPosUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EntityPosUpdate::CopyFrom(const EntityPosUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:EntityPosUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EntityPosUpdate::IsInitialized() const {
  return true;
}

void EntityPosUpdate::Swap(EntityPosUpdate* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EntityPosUpdate::InternalSwap(EntityPosUpdate* other) {
  using std::swap;
  entity_pos_.InternalSwap(&other->entity_pos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EntityPosUpdate::GetMetadata() const {
  protobuf_ProtoPacks_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacks_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void PutBlock::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PutBlock::kXFieldNumber;
const int PutBlock::kYFieldNumber;
const int PutBlock::kZFieldNumber;
const int PutBlock::kBlockIdFieldNumber;
const int PutBlock::kOperationIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PutBlock::PutBlock()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsPutBlock();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PutBlock)
}
PutBlock::PutBlock(const PutBlock& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&operation_id_) -
    reinterpret_cast<char*>(&x_)) + sizeof(operation_id_));
  // @@protoc_insertion_point(copy_constructor:PutBlock)
}

void PutBlock::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&operation_id_) -
      reinterpret_cast<char*>(&x_)) + sizeof(operation_id_));
  _cached_size_ = 0;
}

PutBlock::~PutBlock() {
  // @@protoc_insertion_point(destructor:PutBlock)
  SharedDtor();
}

void PutBlock::SharedDtor() {
}

void PutBlock::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PutBlock::descriptor() {
  ::protobuf_ProtoPacks_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacks_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PutBlock& PutBlock::default_instance() {
  ::protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsPutBlock();
  return *internal_default_instance();
}

PutBlock* PutBlock::New(::google::protobuf::Arena* arena) const {
  PutBlock* n = new PutBlock;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PutBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:PutBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&operation_id_) -
      reinterpret_cast<char*>(&x_)) + sizeof(operation_id_));
  _internal_metadata_.Clear();
}

bool PutBlock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PutBlock)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &z_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 block_id = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &block_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 operation_id = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &operation_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PutBlock)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PutBlock)
  return false;
#undef DO_
}

void PutBlock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PutBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // int32 y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  // int32 z = 3;
  if (this->z() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->z(), output);
  }

  // int32 block_id = 4;
  if (this->block_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->block_id(), output);
  }

  // uint32 operation_id = 5;
  if (this->operation_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->operation_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:PutBlock)
}

::google::protobuf::uint8* PutBlock::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:PutBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // int32 y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  // int32 z = 3;
  if (this->z() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->z(), target);
  }

  // int32 block_id = 4;
  if (this->block_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->block_id(), target);
  }

  // uint32 operation_id = 5;
  if (this->operation_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->operation_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PutBlock)
  return target;
}

size_t PutBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PutBlock)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 x = 1;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  // int32 y = 2;
  if (this->y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  // int32 z = 3;
  if (this->z() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->z());
  }

  // int32 block_id = 4;
  if (this->block_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->block_id());
  }

  // uint32 operation_id = 5;
  if (this->operation_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->operation_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PutBlock::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PutBlock)
  GOOGLE_DCHECK_NE(&from, this);
  const PutBlock* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PutBlock>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PutBlock)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PutBlock)
    MergeFrom(*source);
  }
}

void PutBlock::MergeFrom(const PutBlock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PutBlock)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
  if (from.z() != 0) {
    set_z(from.z());
  }
  if (from.block_id() != 0) {
    set_block_id(from.block_id());
  }
  if (from.operation_id() != 0) {
    set_operation_id(from.operation_id());
  }
}

void PutBlock::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PutBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PutBlock::CopyFrom(const PutBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PutBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PutBlock::IsInitialized() const {
  return true;
}

void PutBlock::Swap(PutBlock* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PutBlock::InternalSwap(PutBlock* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(z_, other->z_);
  swap(block_id_, other->block_id_);
  swap(operation_id_, other->operation_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PutBlock::GetMetadata() const {
  protobuf_ProtoPacks_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacks_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Cmd_PutBlockInPs::InitAsDefaultInstance() {
  ::_Cmd_PutBlockInPs_default_instance_._instance.get_mutable()->put_block_ = const_cast< ::PutBlock*>(
      ::PutBlock::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Cmd_PutBlockInPs::kTaskIdFieldNumber;
const int Cmd_PutBlockInPs::kPutBlockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Cmd_PutBlockInPs::Cmd_PutBlockInPs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsCmd_PutBlockInPs();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Cmd_PutBlockInPs)
}
Cmd_PutBlockInPs::Cmd_PutBlockInPs(const Cmd_PutBlockInPs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_put_block()) {
    put_block_ = new ::PutBlock(*from.put_block_);
  } else {
    put_block_ = NULL;
  }
  task_id_ = from.task_id_;
  // @@protoc_insertion_point(copy_constructor:Cmd_PutBlockInPs)
}

void Cmd_PutBlockInPs::SharedCtor() {
  ::memset(&put_block_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&task_id_) -
      reinterpret_cast<char*>(&put_block_)) + sizeof(task_id_));
  _cached_size_ = 0;
}

Cmd_PutBlockInPs::~Cmd_PutBlockInPs() {
  // @@protoc_insertion_point(destructor:Cmd_PutBlockInPs)
  SharedDtor();
}

void Cmd_PutBlockInPs::SharedDtor() {
  if (this != internal_default_instance()) delete put_block_;
}

void Cmd_PutBlockInPs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Cmd_PutBlockInPs::descriptor() {
  ::protobuf_ProtoPacks_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacks_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Cmd_PutBlockInPs& Cmd_PutBlockInPs::default_instance() {
  ::protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsCmd_PutBlockInPs();
  return *internal_default_instance();
}

Cmd_PutBlockInPs* Cmd_PutBlockInPs::New(::google::protobuf::Arena* arena) const {
  Cmd_PutBlockInPs* n = new Cmd_PutBlockInPs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Cmd_PutBlockInPs::Clear() {
// @@protoc_insertion_point(message_clear_start:Cmd_PutBlockInPs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && put_block_ != NULL) {
    delete put_block_;
  }
  put_block_ = NULL;
  task_id_ = 0u;
  _internal_metadata_.Clear();
}

bool Cmd_PutBlockInPs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Cmd_PutBlockInPs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 task_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &task_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PutBlock put_block = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_put_block()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Cmd_PutBlockInPs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Cmd_PutBlockInPs)
  return false;
#undef DO_
}

void Cmd_PutBlockInPs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Cmd_PutBlockInPs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 task_id = 1;
  if (this->task_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->task_id(), output);
  }

  // .PutBlock put_block = 2;
  if (this->has_put_block()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->put_block_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Cmd_PutBlockInPs)
}

::google::protobuf::uint8* Cmd_PutBlockInPs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Cmd_PutBlockInPs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 task_id = 1;
  if (this->task_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->task_id(), target);
  }

  // .PutBlock put_block = 2;
  if (this->has_put_block()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->put_block_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Cmd_PutBlockInPs)
  return target;
}

size_t Cmd_PutBlockInPs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Cmd_PutBlockInPs)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .PutBlock put_block = 2;
  if (this->has_put_block()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->put_block_);
  }

  // uint32 task_id = 1;
  if (this->task_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->task_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Cmd_PutBlockInPs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Cmd_PutBlockInPs)
  GOOGLE_DCHECK_NE(&from, this);
  const Cmd_PutBlockInPs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Cmd_PutBlockInPs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Cmd_PutBlockInPs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Cmd_PutBlockInPs)
    MergeFrom(*source);
  }
}

void Cmd_PutBlockInPs::MergeFrom(const Cmd_PutBlockInPs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Cmd_PutBlockInPs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_put_block()) {
    mutable_put_block()->::PutBlock::MergeFrom(from.put_block());
  }
  if (from.task_id() != 0) {
    set_task_id(from.task_id());
  }
}

void Cmd_PutBlockInPs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Cmd_PutBlockInPs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Cmd_PutBlockInPs::CopyFrom(const Cmd_PutBlockInPs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Cmd_PutBlockInPs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Cmd_PutBlockInPs::IsInitialized() const {
  return true;
}

void Cmd_PutBlockInPs::Swap(Cmd_PutBlockInPs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Cmd_PutBlockInPs::InternalSwap(Cmd_PutBlockInPs* other) {
  using std::swap;
  swap(put_block_, other->put_block_);
  swap(task_id_, other->task_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Cmd_PutBlockInPs::GetMetadata() const {
  protobuf_ProtoPacks_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacks_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Rpl_PutBlockInPs::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Rpl_PutBlockInPs::kTaskIdFieldNumber;
const int Rpl_PutBlockInPs::kPutSuccFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Rpl_PutBlockInPs::Rpl_PutBlockInPs()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsRpl_PutBlockInPs();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Rpl_PutBlockInPs)
}
Rpl_PutBlockInPs::Rpl_PutBlockInPs(const Rpl_PutBlockInPs& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&task_id_, &from.task_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&put_succ_) -
    reinterpret_cast<char*>(&task_id_)) + sizeof(put_succ_));
  // @@protoc_insertion_point(copy_constructor:Rpl_PutBlockInPs)
}

void Rpl_PutBlockInPs::SharedCtor() {
  ::memset(&task_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&put_succ_) -
      reinterpret_cast<char*>(&task_id_)) + sizeof(put_succ_));
  _cached_size_ = 0;
}

Rpl_PutBlockInPs::~Rpl_PutBlockInPs() {
  // @@protoc_insertion_point(destructor:Rpl_PutBlockInPs)
  SharedDtor();
}

void Rpl_PutBlockInPs::SharedDtor() {
}

void Rpl_PutBlockInPs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Rpl_PutBlockInPs::descriptor() {
  ::protobuf_ProtoPacks_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacks_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Rpl_PutBlockInPs& Rpl_PutBlockInPs::default_instance() {
  ::protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsRpl_PutBlockInPs();
  return *internal_default_instance();
}

Rpl_PutBlockInPs* Rpl_PutBlockInPs::New(::google::protobuf::Arena* arena) const {
  Rpl_PutBlockInPs* n = new Rpl_PutBlockInPs;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Rpl_PutBlockInPs::Clear() {
// @@protoc_insertion_point(message_clear_start:Rpl_PutBlockInPs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&task_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&put_succ_) -
      reinterpret_cast<char*>(&task_id_)) + sizeof(put_succ_));
  _internal_metadata_.Clear();
}

bool Rpl_PutBlockInPs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Rpl_PutBlockInPs)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 task_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &task_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 put_succ = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &put_succ_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Rpl_PutBlockInPs)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Rpl_PutBlockInPs)
  return false;
#undef DO_
}

void Rpl_PutBlockInPs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Rpl_PutBlockInPs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 task_id = 1;
  if (this->task_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->task_id(), output);
  }

  // uint32 put_succ = 2;
  if (this->put_succ() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->put_succ(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Rpl_PutBlockInPs)
}

::google::protobuf::uint8* Rpl_PutBlockInPs::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Rpl_PutBlockInPs)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 task_id = 1;
  if (this->task_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->task_id(), target);
  }

  // uint32 put_succ = 2;
  if (this->put_succ() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->put_succ(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Rpl_PutBlockInPs)
  return target;
}

size_t Rpl_PutBlockInPs::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Rpl_PutBlockInPs)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 task_id = 1;
  if (this->task_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->task_id());
  }

  // uint32 put_succ = 2;
  if (this->put_succ() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->put_succ());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Rpl_PutBlockInPs::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Rpl_PutBlockInPs)
  GOOGLE_DCHECK_NE(&from, this);
  const Rpl_PutBlockInPs* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Rpl_PutBlockInPs>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Rpl_PutBlockInPs)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Rpl_PutBlockInPs)
    MergeFrom(*source);
  }
}

void Rpl_PutBlockInPs::MergeFrom(const Rpl_PutBlockInPs& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Rpl_PutBlockInPs)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.task_id() != 0) {
    set_task_id(from.task_id());
  }
  if (from.put_succ() != 0) {
    set_put_succ(from.put_succ());
  }
}

void Rpl_PutBlockInPs::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Rpl_PutBlockInPs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Rpl_PutBlockInPs::CopyFrom(const Rpl_PutBlockInPs& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Rpl_PutBlockInPs)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Rpl_PutBlockInPs::IsInitialized() const {
  return true;
}

void Rpl_PutBlockInPs::Swap(Rpl_PutBlockInPs* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Rpl_PutBlockInPs::InternalSwap(Rpl_PutBlockInPs* other) {
  using std::swap;
  swap(task_id_, other->task_id_);
  swap(put_succ_, other->put_succ_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Rpl_PutBlockInPs::GetMetadata() const {
  protobuf_ProtoPacks_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacks_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClientOperationFailed::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientOperationFailed::kOperationIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientOperationFailed::ClientOperationFailed()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsClientOperationFailed();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClientOperationFailed)
}
ClientOperationFailed::ClientOperationFailed(const ClientOperationFailed& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  operation_id_ = from.operation_id_;
  // @@protoc_insertion_point(copy_constructor:ClientOperationFailed)
}

void ClientOperationFailed::SharedCtor() {
  operation_id_ = 0u;
  _cached_size_ = 0;
}

ClientOperationFailed::~ClientOperationFailed() {
  // @@protoc_insertion_point(destructor:ClientOperationFailed)
  SharedDtor();
}

void ClientOperationFailed::SharedDtor() {
}

void ClientOperationFailed::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientOperationFailed::descriptor() {
  ::protobuf_ProtoPacks_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacks_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientOperationFailed& ClientOperationFailed::default_instance() {
  ::protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsClientOperationFailed();
  return *internal_default_instance();
}

ClientOperationFailed* ClientOperationFailed::New(::google::protobuf::Arena* arena) const {
  ClientOperationFailed* n = new ClientOperationFailed;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientOperationFailed::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientOperationFailed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  operation_id_ = 0u;
  _internal_metadata_.Clear();
}

bool ClientOperationFailed::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClientOperationFailed)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 operation_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &operation_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClientOperationFailed)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClientOperationFailed)
  return false;
#undef DO_
}

void ClientOperationFailed::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClientOperationFailed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 operation_id = 1;
  if (this->operation_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->operation_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ClientOperationFailed)
}

::google::protobuf::uint8* ClientOperationFailed::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ClientOperationFailed)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 operation_id = 1;
  if (this->operation_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->operation_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientOperationFailed)
  return target;
}

size_t ClientOperationFailed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientOperationFailed)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 operation_id = 1;
  if (this->operation_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->operation_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientOperationFailed::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientOperationFailed)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientOperationFailed* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientOperationFailed>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientOperationFailed)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientOperationFailed)
    MergeFrom(*source);
  }
}

void ClientOperationFailed::MergeFrom(const ClientOperationFailed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientOperationFailed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.operation_id() != 0) {
    set_operation_id(from.operation_id());
  }
}

void ClientOperationFailed::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientOperationFailed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientOperationFailed::CopyFrom(const ClientOperationFailed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientOperationFailed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientOperationFailed::IsInitialized() const {
  return true;
}

void ClientOperationFailed::Swap(ClientOperationFailed* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientOperationFailed::InternalSwap(ClientOperationFailed* other) {
  using std::swap;
  swap(operation_id_, other->operation_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientOperationFailed::GetMetadata() const {
  protobuf_ProtoPacks_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacks_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ClientOperationSucc::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ClientOperationSucc::kOperationIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ClientOperationSucc::ClientOperationSucc()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsClientOperationSucc();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:ClientOperationSucc)
}
ClientOperationSucc::ClientOperationSucc(const ClientOperationSucc& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  operation_id_ = from.operation_id_;
  // @@protoc_insertion_point(copy_constructor:ClientOperationSucc)
}

void ClientOperationSucc::SharedCtor() {
  operation_id_ = 0u;
  _cached_size_ = 0;
}

ClientOperationSucc::~ClientOperationSucc() {
  // @@protoc_insertion_point(destructor:ClientOperationSucc)
  SharedDtor();
}

void ClientOperationSucc::SharedDtor() {
}

void ClientOperationSucc::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ClientOperationSucc::descriptor() {
  ::protobuf_ProtoPacks_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacks_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ClientOperationSucc& ClientOperationSucc::default_instance() {
  ::protobuf_ProtoPacks_2fcommon_2eproto::InitDefaultsClientOperationSucc();
  return *internal_default_instance();
}

ClientOperationSucc* ClientOperationSucc::New(::google::protobuf::Arena* arena) const {
  ClientOperationSucc* n = new ClientOperationSucc;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ClientOperationSucc::Clear() {
// @@protoc_insertion_point(message_clear_start:ClientOperationSucc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  operation_id_ = 0u;
  _internal_metadata_.Clear();
}

bool ClientOperationSucc::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ClientOperationSucc)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 operation_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &operation_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ClientOperationSucc)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ClientOperationSucc)
  return false;
#undef DO_
}

void ClientOperationSucc::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ClientOperationSucc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 operation_id = 1;
  if (this->operation_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->operation_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ClientOperationSucc)
}

::google::protobuf::uint8* ClientOperationSucc::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ClientOperationSucc)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 operation_id = 1;
  if (this->operation_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->operation_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ClientOperationSucc)
  return target;
}

size_t ClientOperationSucc::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ClientOperationSucc)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 operation_id = 1;
  if (this->operation_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->operation_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ClientOperationSucc::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ClientOperationSucc)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientOperationSucc* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ClientOperationSucc>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ClientOperationSucc)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ClientOperationSucc)
    MergeFrom(*source);
  }
}

void ClientOperationSucc::MergeFrom(const ClientOperationSucc& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ClientOperationSucc)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.operation_id() != 0) {
    set_operation_id(from.operation_id());
  }
}

void ClientOperationSucc::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ClientOperationSucc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientOperationSucc::CopyFrom(const ClientOperationSucc& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ClientOperationSucc)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientOperationSucc::IsInitialized() const {
  return true;
}

void ClientOperationSucc::Swap(ClientOperationSucc* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ClientOperationSucc::InternalSwap(ClientOperationSucc* other) {
  using std::swap;
  swap(operation_id_, other->operation_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ClientOperationSucc::GetMetadata() const {
  protobuf_ProtoPacks_2fcommon_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ProtoPacks_2fcommon_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
